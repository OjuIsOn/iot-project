<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <!-- <link rel="stylesheet" href="/maps.css"> -->
    <style>
        /* Body */
        body {
            min-width: 100%;
            min-height: 100%;
            background: rgba(0, 0, 0, 0.9);
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 7rem;
        }

        /* Navigation */
        nav {
            width: 100%;
            height: 3.5rem;
            display: flex;
            align-items: center;
            justify-content: space-around;
            color: white;
            margin-bottom: 3rem;
        }

        .logo {
            font-size: 3rem;
            text-shadow: 0 0 7px rgba(255, 255, 255, 1);
            font-weight: 500;
        }

        .nav-links {
            display: flex;
            gap: 1.25rem;
        }

        .nav-links a {
            border: 1px solid white;
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            transition: all 0.5s ease-in-out;
            color: white;
            text-decoration: none;
        }

        .contact-link {
            background-color: white;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
        }

        .nav-links a:hover {
            transform: scale(1.1);
            box-shadow: 0 0 10px 1px rgba(255, 255, 255, 0.5);
        }

        .nav-links .bg-white {
            background-color: white;
            color: black;
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
        }

        /* Title */
        .title {
            font-size: 2rem;
            text-shadow: 0 0 7px rgba(255, 255, 255, 1);
            font-weight: 500;
            color: white;
            margin-bottom: 1rem;
            text-align: center;
            transition: all 0.3s ease-in-out;
        }

        .title:hover {
            text-decoration: underline;
            transform: scale(1.01);
        }

        /* Map */
        #map {
            height: 500px;
            width: 70%;
            border-radius: 0.375rem;
        }

        /* Footer */
        footer {
            width: 100%;
            padding: 1.5rem 0;
            color: white;
        }

        .footer-content {
            display: flex;
            align-items: center;
            justify-content: space-around;
        }

        .footer-logo {
            font-size: 1.25rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .footer-links {
            display: flex;
            gap: 1.5rem;
        }

        .footer-links a {
            color: rgba(255, 255, 255, 0.6);
            transition: color 0.3s ease;
        }

        .footer-links a:hover {
            color: white;
        }

        .copyright {
            text-align: center;
            color: rgba(255, 255, 255, 0.3);
            margin-top: 1rem;
        }

        /* Custom Icon Style */
        .custom-square-icon {
            background-color: rgba(0, 255, 76, 0.851);
            width: 1px;
            height: 1px;
            display: block;
            border-radius: 3px;
        }
    </style>
    <title>Real Time Location</title>
</head>

<body>
    <nav>
        <div class="logo">LockIt</div>
        <div class="nav-links">
            <a href="/">Home</a>
            <a href="#" class="contact-link" style="color: black;">Contact Us</a>
        </div>
    </nav>

    <div class="title">Real Time Location</div>
    <div id="map" style="height:500px ;width:100vw"></div>

    <footer>
        <div class="footer-content">
            <div class="footer-logo">LockIt</div>
            <div class="footer-links">
                <a href="#">About Us</a>
                <a href="#">Services</a>
                <a href="#">Contact</a>
                <a href="#">Privacy Policy</a>
            </div>
        </div>
        <div class="copyright">
            <p>&copy; 2024 LockIt. All rights reserved.</p>
        </div>
    </footer>

    <script>
        var map = L.map('map').setView([0, 0], 17);

        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

<<<<<<< HEAD

var lat=29.945564;
var lng=76.816046;

var slat=29.945562;
var slng=76.816041;

// function showLocation(){
//     navigator.geolocation.getCurrentPosition(locatedpos,errorfunc,{
//             enableHighAccuracy: true,
//             timeout: 1000,
//             maximumAge: 0
//         });
// }
=======
        navigator.geolocation.watchPosition(success, error, {
            enableHighAccuracy: true, // Use GPS and other high-accuracy methods
            timeout: 5000, // Maximum time to wait for a position update (in ms)
            maximumAge: 0 // Do not use a cached position
        });
>>>>>>> b17ba1c3833bee620e361536526f8ce5fd23008a

        let marker, circle;

<<<<<<< HEAD
// async function locatedpos(position){
//     slat = position.coords.latitude + 0.235043;
//     slng = position.coords.longitude + 0.457847;
//     console.log(slat);
//     console.log(slng);
//     console.log(position);
// }

// function errorfunc(){
//     console.log("There is some error");
// }

// showLocation();
=======
        var squareIcon = L.divIcon({
            className: 'custom-square-icon',
            iconSize: [10, 10],
        });

        function success(pos) {
            const lat = 29.9420886;
            const lng = 76.8195012;
            const accuracy = pos.coords.accuracy;

            if (marker) {
                map.removeLayer(marker);
                map.removeLayer(circle);
            }
>>>>>>> b17ba1c3833bee620e361536526f8ce5fd23008a

            marker = L.marker([lat, lng]).addTo(map);
            circle = L.circle([lat, lng], { radius: accuracy }).addTo(map);

            L.marker([29.945562, 76.816042], { icon: squareIcon }).addTo(map)
                .bindPopup('I am a square-shaped marker!');

            map.fitBounds(circle.getBounds());

            map.setView([lat, lng]);

            console.log("The current lat is " + lat);
            console.log("The current lng is " + lng);
            console.log("The accuracy is around " + accuracy);
        }

        function error(err) {

<<<<<<< HEAD
    const accuracy= pos.coords.accuracy;

    console.log(slat, slng);

    if(marker){
        map.removeLayer(marker);
        map.removeLayer(circle);
    }

    marker=L.marker([lat,lng]).addTo(map);
    circle=L.circle([lat,lng], { radius: 100}).addTo(map);

    L.marker([slat,slng], { icon: squareIcon }).addTo(map)
            .bindPopup('I am a square-shaped marker!');

    map.fitBounds(circle.getBounds());

    map.setView([lat,lng]);
    var distance = calculateDistance(lat, lng, slat, slng);
    console.log(distance);

// Check if the distance exceeds 100 meters
    if (distance > 100) {
    console.log("The cycle is outside fencing zone");
    const element = document.getElementById("map");
    element.style.border = "7px dotted red";
}

else{
    const element = document.getElementById("map");
    element.style.border = "0px";
}
}

function calculateDistance(lat1, lon1, lat2, lon2) {
    var R = 6371e3; // Radius of the Earth in meters
    var φ1 = lat1 * Math.PI / 180; // φ, λ in radians
    var φ2 = lat2 * Math.PI / 180;
    var Δφ = (lat2 - lat1) * Math.PI / 180;
    var Δλ = (lon2 - lon1) * Math.PI / 180;

    var a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +
            Math.cos(φ1) * Math.cos(φ2) *
            Math.sin(Δλ / 2) * Math.sin(Δλ / 2);
    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));

    var distance = R * c; // in meters
    return distance;
}

// Get the distance between the two locations


function error(err){

    if(err.code===1){
        alert("Please allow geolocation access");
    }else{
        console.log("Error !!", err);
    }
}
</script>
=======
            if (err.code === 1) {
                alert("Please allow geolocation access");
            } else {
                alert("Error !!");
            }
        }
    </script>
>>>>>>> b17ba1c3833bee620e361536526f8ce5fd23008a
</body>

</html>